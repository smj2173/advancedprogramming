From 040b0c76c92092674f02376d29f4dc0dddc99189 Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Sun, 24 Jan 2021 22:32:20 -0500
Subject: [PATCH 01/10] created files for part 1 of the lab; included some
 skeleton code based on what main.c is expected to print out.

---
 part1/gcd.c   |  2 ++
 part1/gcd.h   |  4 ++++
 part1/main.c  | 21 +++++++++++++++++++++
 part1/prime.c |  2 ++
 part1/prime.h |  4 ++++
 5 files changed, 33 insertions(+)
 create mode 100644 part1/gcd.c
 create mode 100644 part1/gcd.h
 create mode 100644 part1/main.c
 create mode 100644 part1/prime.c
 create mode 100644 part1/prime.h

diff --git a/part1/gcd.c b/part1/gcd.c
new file mode 100644
index 0000000..bccc92c
--- /dev/null
+++ b/part1/gcd.c
@@ -0,0 +1,2 @@
+#include "gcd.h"
+//put something here
diff --git a/part1/gcd.h b/part1/gcd.h
new file mode 100644
index 0000000..09fb444
--- /dev/null
+++ b/part1/gcd.h
@@ -0,0 +1,4 @@
+#ifndef _GCD_H_
+#define _GCD_H_
+//put something here
+#endif
diff --git a/part1/main.c b/part1/main.c
new file mode 100644
index 0000000..32843fe
--- /dev/null
+++ b/part1/main.c
@@ -0,0 +1,21 @@
+#include "gcd.h prime.h"
+
+int main()
+{
+	int x, y;
+	printf("Enter a positive integer.");
+	scanf(%d, x);
+	printf("Enter another positive integer");
+	scanf(%d, y);
+
+	float average = float(a+b)/2.0;
+ 	
+	printf("The average of the inputs is", average);
+
+	int gcd(x, y);
+
+	int prime(x, y);
+
+	return 0;
+
+}
diff --git a/part1/prime.c b/part1/prime.c
new file mode 100644
index 0000000..d1397d0
--- /dev/null
+++ b/part1/prime.c
@@ -0,0 +1,2 @@
+#include "myadd.h"
+//write something
diff --git a/part1/prime.h b/part1/prime.h
new file mode 100644
index 0000000..d13b65c
--- /dev/null
+++ b/part1/prime.h
@@ -0,0 +1,4 @@
+#ifndef _PRIME_H_
+#define _PRIME_H_
+//put something here
+#endif
-- 
2.17.1


From cb810605d3a4789e4a33ebbc68a78ba2cfe7d00c Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Sun, 24 Jan 2021 23:02:10 -0500
Subject: [PATCH 02/10] Wrote the gcd.c program and configured main.c to print
 out if the two numbers are relatively prime or not.

---
 README.txt   | 38 +++++++++++++++++++++++++++++++-------
 part1/gcd.c  |  9 ++++++++-
 part1/main.c | 22 +++++++++++++++-------
 3 files changed, 54 insertions(+), 15 deletions(-)

diff --git a/README.txt b/README.txt
index fd2e560..11bb527 100644
--- a/README.txt
+++ b/README.txt
@@ -1,7 +1,8 @@
-This file should contain:
 
-  - your name
-  - your UNI
+Sophie Johnson
+smj2173
+lab 1
+ 
   - lab assignment number
   - answers to academic honesty questions
   - description for each part
@@ -15,7 +16,30 @@ implemented or how you tried to fix your non-working code.
 
 Please answer the academic honesty questions.
 
+[1] YES, because then you cannot independently come to a conclusion about the
+answer; one's answer will be informed and directed by the tutor's leading
+questions and assistance.
 
+[2] YES, sending screenshots of work is an example of looking directly at
+one's code and then you will not be able to separate how you solve the problem
+from how they approached it.
+
+[3] YES, because you have them in your possession and were planning on using
+them.
+
+[4]
+	[a] NO, because you are discussing class material collaboratively rather than sharing/discussing solutions.
+	[b] YES, because you are discussing class solutions that should be solved individually.
+	[c] NO, because this is a question about the learning objectives of the assignment rather than the actual content/solutions of/to the lab.
+
+[5] YES, because even if you do not use any of the code in your submission,
+you referenced material that you were not authorized to reference and examine
+when working on the assignment.
+
+[6] NO, because you are simply try to understand what an error means and how
+to approach resolving it.
+
+[7] YES, because you are copying code that is not yours.
 
 --------------------------------------------------------------------------
 
@@ -25,12 +49,12 @@ Part 0
 Please write your answers after [ANSWER] on the same line.  Our auto-grading
 script will look for lines that contain [ANSWER].
 
-[0.1][ANSWER] 
+[0.1][ANSWER] git init
 
-[0.2][ANSWER] 
+[0.2][ANSWER] C
 
-[0.3][ANSWER] 
+[0.3][ANSWER] git checkout -- hello.c
 
-[0.4][ANSWER] 
+[0.4][ANSWER] git reset HEAD hello.c
 
 
diff --git a/part1/gcd.c b/part1/gcd.c
index bccc92c..04e9ad8 100644
--- a/part1/gcd.c
+++ b/part1/gcd.c
@@ -1,2 +1,9 @@
 #include "gcd.h"
-//put something here
+
+int gcd(int x, int y)
+{
+	if (y == 0)
+		return x;
+	return gcd(y, x%y);
+}
+
diff --git a/part1/main.c b/part1/main.c
index 32843fe..cdfec5b 100644
--- a/part1/main.c
+++ b/part1/main.c
@@ -3,18 +3,26 @@
 int main()
 {
 	int x, y;
-	printf("Enter a positive integer.");
-	scanf(%d, x);
-	printf("Enter another positive integer");
-	scanf(%d, y);
+	scanf("%d", &x);
+	scanf("%d", &y);
+
+	printf("You typed in %d and %d\n", x, y);
 
 	float average = float(a+b)/2.0;
  	
-	printf("The average of the inputs is", average);
+	printf("The average is: %f\n", average);
 
-	int gcd(x, y);
+	if (int gcd(x, y) == 1)
+	{
+		printf(x, y, "are relatively prime");
+	}
+	else
+	{
+		printf(x, y, "are not relatively prime");
+	}
 
-	int prime(x, y);
+	int prime(x);
+	int prime(y);
 
 	return 0;
 
-- 
2.17.1


From 453fb4844b1b659deb3ab4d0482b55d40ef37faa Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Mon, 25 Jan 2021 11:55:22 -0500
Subject: [PATCH 03/10] Wrote my prime.c program and made some adjustments to
 main.c to format the outputs of prime.c and gcd.c.

---
 part1/gcd.h   |  2 +-
 part1/main.c  | 12 +++++++++---
 part1/prime.c | 25 +++++++++++++++++++++++--
 part1/prime.h |  2 +-
 4 files changed, 34 insertions(+), 7 deletions(-)

diff --git a/part1/gcd.h b/part1/gcd.h
index 09fb444..8f7c9f0 100644
--- a/part1/gcd.h
+++ b/part1/gcd.h
@@ -1,4 +1,4 @@
 #ifndef _GCD_H_
 #define _GCD_H_
-//put something here
+int gcd(int x, int y);
 #endif
diff --git a/part1/main.c b/part1/main.c
index cdfec5b..13025d4 100644
--- a/part1/main.c
+++ b/part1/main.c
@@ -18,11 +18,17 @@ int main()
 	}
 	else
 	{
-		printf(x, y, "are not relatively prime");
+		printf(x, y, " are not relatively prime");
 	}
 
-	int prime(x);
-	int prime(y);
+	if (int prime(x) == 0)
+		printf(x," is not prime");
+	else
+		printf(x," is prime");
+	if (int prime(y) == 0)
+		printf(y," is not prime");
+	else
+		printf(y," is prime");
 
 	return 0;
 
diff --git a/part1/prime.c b/part1/prime.c
index d1397d0..b5cd901 100644
--- a/part1/prime.c
+++ b/part1/prime.c
@@ -1,2 +1,23 @@
-#include "myadd.h"
-//write something
+#include "prime.h"
+
+int prime(int x)
+{
+	int i;
+	if (x <= 1)
+	{
+		printf(x," is not prime");
+	}
+	else{
+		for (i=2; i < x; ++i)
+		{
+			if ((x % i) == 0){
+				printf(x," is not prime");
+				break;
+			}
+			else{
+				printf(x," is prime");
+			}		
+		}
+	}
+	return 0;
+}
diff --git a/part1/prime.h b/part1/prime.h
index d13b65c..d7ae0dc 100644
--- a/part1/prime.h
+++ b/part1/prime.h
@@ -1,4 +1,4 @@
 #ifndef _PRIME_H_
 #define _PRIME_H_
-//put something here
+int prime(int x);
 #endif
-- 
2.17.1


From bfdf945802778de0ee6ba6cb363baf47dc206d11 Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Tue, 26 Jan 2021 19:21:29 -0500
Subject: [PATCH 04/10] debugged prime.c and main.c

---
 part1/main.c  | 24 +++++++++++-------------
 part1/prime.c |  6 +++---
 2 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/part1/main.c b/part1/main.c
index 13025d4..6eeb759 100644
--- a/part1/main.c
+++ b/part1/main.c
@@ -1,4 +1,6 @@
-#include "gcd.h prime.h"
+#include <stdio.h>
+#include "gcd.h"
+#include "prime.h"
 
 int main()
 {
@@ -8,27 +10,23 @@ int main()
 
 	printf("You typed in %d and %d\n", x, y);
 
-	float average = float(a+b)/2.0;
+	float average = (float)(x+y)/2;
  	
 	printf("The average is: %f\n", average);
 
-	if (int gcd(x, y) == 1)
+	int z = gcd(x, y);
+
+	if (z == 1)
 	{
-		printf(x, y, "are relatively prime");
+		printf("%d and %d are relatively prime\n", x, y);
 	}
 	else
 	{
-		printf(x, y, " are not relatively prime");
+		printf("%d and %d are not relatively prime\n", x, y);
 	}
 
-	if (int prime(x) == 0)
-		printf(x," is not prime");
-	else
-		printf(x," is prime");
-	if (int prime(y) == 0)
-		printf(y," is not prime");
-	else
-		printf(y," is prime");
+	prime(x);
+	prime(y);
 
 	return 0;
 
diff --git a/part1/prime.c b/part1/prime.c
index b5cd901..164b0bd 100644
--- a/part1/prime.c
+++ b/part1/prime.c
@@ -5,17 +5,17 @@ int prime(int x)
 	int i;
 	if (x <= 1)
 	{
-		printf(x," is not prime");
+		printf("%d is not prime\n", x);
 	}
 	else{
 		for (i=2; i < x; ++i)
 		{
 			if ((x % i) == 0){
-				printf(x," is not prime");
+				printf("%d is not prime\n", x);
 				break;
 			}
 			else{
-				printf(x," is prime");
+				printf("%d is prime\n", x);
 			}		
 		}
 	}
-- 
2.17.1


From 9f50d8aec40b1149e25b4c4af59eafadbe18e56e Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Tue, 26 Jan 2021 20:10:09 -0500
Subject: [PATCH 05/10] finalized edits for prime.c; there were some errors i
 needed to fix where it was miscategorizing odd but not prime numbers as prime
 and miscategorizing 2 as a non-prime number.

---
 part1/prime.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/part1/prime.c b/part1/prime.c
index 164b0bd..912a0c3 100644
--- a/part1/prime.c
+++ b/part1/prime.c
@@ -1,8 +1,10 @@
 #include "prime.h"
+#include <stdio.h>
 
 int prime(int x)
 {
 	int i;
+	int isprime = 0;
 	if (x <= 1)
 	{
 		printf("%d is not prime\n", x);
@@ -11,13 +13,14 @@ int prime(int x)
 		for (i=2; i < x; ++i)
 		{
 			if ((x % i) == 0){
-				printf("%d is not prime\n", x);
-				break;
+				isprime = 1;
 			}
-			else{
-				printf("%d is prime\n", x);
-			}		
 		}
-	}
+	}		
+	if (isprime == 1)
+		printf("%d is not prime\n", x);
+	else
+		printf("%d is prime\n", x); 
+
 	return 0;
 }
-- 
2.17.1


From 244b5de1548d1aa3f8533033fa33ce41b79a502b Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Tue, 26 Jan 2021 22:22:12 -0500
Subject: [PATCH 06/10] created main.c, convert.c, and convert.h files. started
 writing code for converting a signed decimal integer into the 3 other types.

---
 README.txt      | 15 ++++++++++-----
 part2/convert.c | 27 +++++++++++++++++++++++++++
 part2/convert.h |  4 ++++
 part2/main.c    | 13 +++++++++++++
 4 files changed, 54 insertions(+), 5 deletions(-)
 create mode 100644 part2/convert.c
 create mode 100644 part2/convert.h
 create mode 100644 part2/main.c

diff --git a/README.txt b/README.txt
index 11bb527..88501ef 100644
--- a/README.txt
+++ b/README.txt
@@ -1,10 +1,8 @@
 
-Sophie Johnson
-smj2173
+Name: Sophie Johnson
+UNI: smj2173
 lab 1
  
-  - lab assignment number
-  - answers to academic honesty questions
   - description for each part
   
 The description should indicate whether your solution for the part is
@@ -49,7 +47,7 @@ Part 0
 Please write your answers after [ANSWER] on the same line.  Our auto-grading
 script will look for lines that contain [ANSWER].
 
-[0.1][ANSWER] git init
+[0.1][ANSWER] git init, git push
 
 [0.2][ANSWER] C
 
@@ -57,4 +55,11 @@ script will look for lines that contain [ANSWER].
 
 [0.4][ANSWER] git reset HEAD hello.c
 
+-------------------------------------------------------------------------
+
+Part 1
+------
+
+Source referenced for Euclidean algorithm: https://sites.math.rutgers.edu/~greenfie/gs2004/euclid.html
+
 
diff --git a/part2/convert.c b/part2/convert.c
new file mode 100644
index 0000000..c4018c9
--- /dev/null
+++ b/part2/convert.c
@@ -0,0 +1,27 @@
+#include <stdio.h>
+
+int convert(int a)
+{
+	//signed decimal
+	printf("signed dec: %d\n", a);
+
+	//unsigned decimal
+	if (a > 0)
+		int b = a;
+	else
+		int b = 4294967295 + (a+1);
+	printf("unsigned dec %d\n", b);
+
+	//hex
+	
+	printf("hex: %d\n", c);
+
+
+	//binary
+	printf("binary: %d\n", d);
+
+		
+	return 0;
+
+
+}
diff --git a/part2/convert.h b/part2/convert.h
new file mode 100644
index 0000000..be4113b
--- /dev/null
+++ b/part2/convert.h
@@ -0,0 +1,4 @@
+#ifndef __CONVERT_H__
+#define __CONVERT_H__
+int convert(int a);
+#endif
diff --git a/part2/main.c b/part2/main.c
new file mode 100644
index 0000000..745ed58
--- /dev/null
+++ b/part2/main.c
@@ -0,0 +1,13 @@
+#include <stdio.h>
+
+int main()
+{
+    int x = -1;
+
+    printf("printf-ing -1 as %%d: %d\n", x);
+    printf("printf-ing -1 as %%u: %u\n", x);
+    printf("printf-ing -1 as %%x: %x\n", x);
+
+    return 0;
+}
+
-- 
2.17.1


From 3deb4ed77daa6528535c5fdb877d7fcc41e22b56 Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Tue, 26 Jan 2021 23:21:37 -0500
Subject: [PATCH 07/10] constructed a Makefile and further modified the two
 convert files and main.c to fulfill the object of part2.

---
 part2/Makefile  | 14 ++++++++++++++
 part2/convert.c | 29 ++++++++---------------------
 part2/convert.h |  2 +-
 part2/main.c    | 13 +++++--------
 4 files changed, 28 insertions(+), 30 deletions(-)
 create mode 100644 part2/Makefile

diff --git a/part2/Makefile b/part2/Makefile
new file mode 100644
index 0000000..ff6f43c
--- /dev/null
+++ b/part2/Makefile
@@ -0,0 +1,14 @@
+CC = gcc
+CFLAGS = -g -Wall
+LDFLAGS = -g
+
+convert: main.o convert.o
+
+main.o: main.c convert.h
+
+convert.o: convert.c convert.h
+
+.PHONY: clean
+clean:
+	rm -rf convert *.o a.out
+
diff --git a/part2/convert.c b/part2/convert.c
index c4018c9..28c358f 100644
--- a/part2/convert.c
+++ b/part2/convert.c
@@ -1,27 +1,14 @@
 #include <stdio.h>
+#include <stdint.h>
+#include "convert.h"
 
-int convert(int a)
-{
-	//signed decimal
-	printf("signed dec: %d\n", a);
+int convert(int x){
 
-	//unsigned decimal
-	if (a > 0)
-		int b = a;
-	else
-		int b = 4294967295 + (a+1);
-	printf("unsigned dec %d\n", b);
+	printf("unsigned dec: %d\n", x);
+	printf("signed dec: %u\n", x);
+	printf("hex: %x\n", x);	
+	int32_t y = x;
 
-	//hex
-	
-	printf("hex: %d\n", c);
-
-
-	//binary
-	printf("binary: %d\n", d);
-
-		
 	return 0;
-
-
+		
 }
diff --git a/part2/convert.h b/part2/convert.h
index be4113b..5944c4a 100644
--- a/part2/convert.h
+++ b/part2/convert.h
@@ -1,4 +1,4 @@
 #ifndef __CONVERT_H__
 #define __CONVERT_H__
-int convert(int a);
+int convert();
 #endif
diff --git a/part2/main.c b/part2/main.c
index 745ed58..e4234d9 100644
--- a/part2/main.c
+++ b/part2/main.c
@@ -1,13 +1,10 @@
 #include <stdio.h>
+#include "convert.h"
 
 int main()
 {
-    int x = -1;
-
-    printf("printf-ing -1 as %%d: %d\n", x);
-    printf("printf-ing -1 as %%u: %u\n", x);
-    printf("printf-ing -1 as %%x: %x\n", x);
-
-    return 0;
+	int x;
+	scanf("%d", &x);
+	convert(x);
+	return 0;
 }
-
-- 
2.17.1


From 345f8b66bfadfa32367eb1cf0703fd3b9b3b723c Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Fri, 29 Jan 2021 10:48:35 -0500
Subject: [PATCH 08/10] Bug fixes -Rewrote "make clean" operation in Makefile
 -Worked on and finalized convert.c bit-printing operation.

---
 part2/Makefile  |  2 +-
 part2/convert.c | 24 ++++++++++++++++++------
 2 files changed, 19 insertions(+), 7 deletions(-)

diff --git a/part2/Makefile b/part2/Makefile
index ff6f43c..d078dbf 100644
--- a/part2/Makefile
+++ b/part2/Makefile
@@ -10,5 +10,5 @@ convert.o: convert.c convert.h
 
 .PHONY: clean
 clean:
-	rm -rf convert *.o a.out
+	rm -f *.o a.out core convert
 
diff --git a/part2/convert.c b/part2/convert.c
index 28c358f..3a99224 100644
--- a/part2/convert.c
+++ b/part2/convert.c
@@ -3,12 +3,24 @@
 #include "convert.h"
 
 int convert(int x){
-
-	printf("unsigned dec: %d\n", x);
-	printf("signed dec: %u\n", x);
-	printf("hex: %x\n", x);	
-	int32_t y = x;
-
+	//fourteen spaces
+	printf("signed dec:   %d\n", x);
+	printf("unsigned dec: %u\n", x);
+	printf("hex:  \t      %x\n", x);	
+	int counter = 0;
+	printf("binary:\t      ");
+	int i;
+	for (i = 31; 0 <= i; i--)
+	{ 
+		if ((counter % 4) == 0 && counter != 0)
+			printf(" ");
+		if (x & (1 << i))
+	       		printf("1");
+		else
+			printf("0");
+		counter++;
+	}
+	printf("\n");
 	return 0;
 		
 }
-- 
2.17.1


From 26287368ba1696bccc110606aeba1f56b9987d1c Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Fri, 29 Jan 2021 10:52:57 -0500
Subject: [PATCH 09/10] Added edited Makefile to branch.

---
 part1/Makefile | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 part1/Makefile

diff --git a/part1/Makefile b/part1/Makefile
new file mode 100644
index 0000000..8489a8a
--- /dev/null
+++ b/part1/Makefile
@@ -0,0 +1,15 @@
+CC = gcc
+CFLAGS = -g -Wall
+LDFLAGS = -g
+
+main: main.o prime.o gcd.o
+
+main.o: main.c gcd.h prime.h
+
+gcd.o: gcd.c gcd.h
+
+prime.o: prime.c prime.h
+
+.PHONY: clean
+clean:
+	rm -f *.o a.out core main
-- 
2.17.1


From 9d6fe32d5ade37e9c947bb08f8faa4da4c0f5e7f Mon Sep 17 00:00:00 2001
From: Sophie Johnson <smj2173@columbia.edu>
Date: Fri, 29 Jan 2021 11:17:28 -0500
Subject: [PATCH 10/10] updated the README

---
 README.txt | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)

diff --git a/README.txt b/README.txt
index 88501ef..f735140 100644
--- a/README.txt
+++ b/README.txt
@@ -3,13 +3,9 @@ Name: Sophie Johnson
 UNI: smj2173
 lab 1
  
-  - description for each part
-  
-The description should indicate whether your solution for the part is
-working or not.  You may also want to include anything else you would
-like to communicate to the grader such as extra functionalities you
-implemented or how you tried to fix your non-working code.
-
+Description of my solutions:
+My code works as it is specified in the lab--it works without errors.
+ 
 --------------------------------------------------------------------------
 
 Please answer the academic honesty questions.
@@ -37,7 +33,8 @@ when working on the assignment.
 [6] NO, because you are simply try to understand what an error means and how
 to approach resolving it.
 
-[7] YES, because you are copying code that is not yours.
+[7] YES, because you are referencing code you are not intended to look at and
+that not everyone has access to.
 
 --------------------------------------------------------------------------
 
@@ -47,7 +44,7 @@ Part 0
 Please write your answers after [ANSWER] on the same line.  Our auto-grading
 script will look for lines that contain [ANSWER].
 
-[0.1][ANSWER] git init, git push
+[0.1][ANSWER] git init
 
 [0.2][ANSWER] C
 
-- 
2.17.1

